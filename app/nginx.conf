server {

    # listen: Define a porta em que o servidor estará ouvindo. 
    # Neste caso, ele está ouvindo na porta 80, tanto para IPv4 quanto para IPv6.
    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;

    # Root: Define o diretório raiz do servidor, onde os arquivos do site estão localizados. 
    # Neste caso, é configurado para /usr/share/nginx/html/public.
    root /usr/share/nginx/html/public/;

    # index: Define a ordem de prioridade para os arquivos de índice que serão servidos quando uma solicitação for feita para um diretório. 
    # Neste caso, o Nginx procurará por arquivos index.php, index.html ou index.htm nesta ordem.
    index index.php index.html index.htm;

    # server_name: Define o nome do servidor. 
    server_name teste-app;

    # Definir o tamanho máximo para upload de arquivos
    client_max_body_size 50M;


    # Quando uma solicitação é feita para o servidor, o Nginx irá tentar servir o arquivo correspondente. 
    # Se não encontrar um arquivo correspondente, ele passará a solicitação para o arquivo index.php 
    # juntamente com quaisquer parâmetros de consulta ($query_string) que possam estar presentes.
    location / {

        #First attempt to serve request as file, then 
        # as directory, then fall back to displaying a 484. 
        try_files $uri $uri/ /index.php?$query_string;
        #Uncomment to enable naxsi on this location 
        #include /etc/nginx/naxsi.rules

    }

    # Essa seção trata das configurações específicas para lidar com arquivos PHP. 
    location ~ \.php$ {

        #try_files $uri =404;
        try_files $uri $uri/ /index.php?$query_string;
        fastcgi_split_path_info ^(.+\.php)(/.+)$; 
        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; 
        include fastcgi_params;

        # location ~ \.php$ faz com que o Nginx procure por arquivos que terminam com .php.
        # try_files $uri =404: o Nginx tentará servir o arquivo PHP correspondente.Se não encontrar retornará um erro 404.
        # fastcgi_split_path_info ^(.+\.php)(/.+)$;: Esta linha divide a informação do caminho do PHP para o servidor CGI, permitindo que ele interprete corretamente as solicitações para arquivos PHP.
        # fastcgi_pass unix:/var/run/php/php8.0-fpm.sock;: Essa diretiva indica ao Nginx que encaminhe as solicitações PHP para o servidor PHP-FPM em execução no soquete Unix especificado.
        # fastcgi_index index.php;: Define o arquivo padrão que o servidor PHP-FPM deve procurar se nenhum arquivo específico for solicitado.
        # fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;: Passa a variável SCRIPT_FILENAME para o servidor PHP-FPM para que ele saiba qual arquivo PHP deve ser executado.
        # include fastcgi_params;: Inclui outros parâmetros necessários para a configuração FastCGI.
    }
}
